package prog;

public class Main {
    public static void main(String... args) {             // pubic - дозволяє усім взаємодіяти з цим методом
        someMethod("1", "1");                         // static - це окремий механізм у Java, який прив'язує...
                                                     //... ці поля або методи не до конкретного об'єкту, а до КЛАСУ...
        ///.... тому зазвичай в статичному методі прописують константи, тобто речі, які є незмінними,....
        // оскільки будь-яку зміни у статичному методі будуть впливати на всіх, хто користується цим класом
        someMethod("Bob", "Alice");
        addNumbers(1, 1);
        someMethod1("Alice", "Bob");
        String methodResponse = "test"; // створюємо змінну і даємо їй назву "test"
        methodResponse = anotherMethod("Bob", "Alice"); //процедура зміни значення змінної, присвоюємо нове значення цій змінній
        System.out.println(methodResponse);
                                                            // private - дозволяє взаємодіяти тільки всередині класу
    }                                                     // void - ключове слово, яке показує, що цей метод не ...
    //... повертає жодних результатів, він просто виконується
// System.out.println - це вивід інформації у консоль для людини, щоб ми могли прочитати, що саме відбувається

    public  void turnLightsOn(){ // метод який включає світло і нічого не повертає (void), не показує....
        //.... підтвердження, що світло увімкнуте
      if (isLightsOn()){
          // do nothing - якщо світло включене не робимо нічого
      } else {
          // turn it on - в іншому випадку вмикаємо світло
      }
    }
public boolean isLightsOn(){  //метод який перевіряє (boolean) чи світло включене і повертає (return)...
        //... нам відповідь - так (true) або ні (false)
        return true;
    }

public Car buyCar(int salary, int savings) {
        return new Car("asd");  // return - повідомляє, яку саме інформацію, в результаті виконання цього методу,,,
    //,,,, буде отримано, тобто якщо ми виконуємо метод buyCar з якоюсь зарплатою int salary і з якимись заощадженнями,,
    //,,,int savings ми отримуємо якусь машину new Car
    /* public Car buyCar(int salary, int savings) { - можна ще зробити так для виводу в консоль
       Сar c = new Car("asd");
        System.out.println(c.getCarColor());
        return c; */
    }

    public static void someMethod(String s2, String s1) {   //В круглих дужках через кому вказуються параметри цього методу
        System.out.println(s1 + s2);                            // Параметрами методу є якісь значення, які ми передаємо у цей метод для того, щоб він їх обробив....
        // ...напр. System.out.println(s1 +s2)
        // У Java всі назви методів та змінних повинні починатися з маленької літери, окрім назви класу (з великої літери)
    }

    public static void addNumbers(int i1, int i2) {
        System.out.println(i1 + i2);
    }

    public static String anotherMethod(String s1, String s2) {         // Це метод, який повертає якесь значення, це означає, що в результаті своєї
        return s1 + " : " + s2;                                         // роботи цей метод здійснює обробку і коли ми виконуємо...
    }                                              //...цей метод ми отримуємо від нього якийсь результат його роботи...
                                                  //.... або методи можуть повертати якийсь тип даних, напр. строка (String)
    // return - це функція Java, яка повідомляє, що у разі виконання якогось методу ми отримуємо якесь значення


    public static void someMethod1(String s1, String s2) {
        System.out.printf("%s : %s", s1, s2);       // printf - написання строки у певному форматі
        // на кожний %s є свій параметр, який можна підставити s1 - Alice : s2 - Bob
        // це корисно, коли треба згенерувати URL для Request запиту на сервер....
        //...або якщо є шаблон форми, куди потрібно повставляти дані
    }
}